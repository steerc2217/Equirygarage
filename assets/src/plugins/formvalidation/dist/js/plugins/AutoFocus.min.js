!function(e,n){typeof exports==='object'&&typeof module!=='undefined'?module.exports=n():typeof define==='function'&&define.amd?define(n):(e=e||self, (e.FormValidation=e.FormValidation||{}, e.FormValidation.plugins=e.FormValidation.plugins||{}, e.FormValidation.plugins.AutoFocus=n()))}(this,(function(){"use strict";function e(e,n){if(!(e instanceof n)){throw new TypeError("Cannot call a class as a function")}}function n(e,n){for(var t=0;t<n.length;t++){var d=n[t];d.enumerable=d.enumerable||!1;d.configurable=!0;"value" in d&&(d.writable=!0);Object.defineProperty(e,d.key,d)}}function t(e,t,d){t&&n(e.prototype,t);d&&n(e,d);return e}function d(e,n){if(typeof n!=="function"&&n!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}});n&&o(e,n)}function l(e){l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)};return l(e)}function o(e,n){o=Object.setPrototypeOf||function(e,n){e.__proto__=n;return e};return o(e,n)}function i(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function a(e,n){if(n&&(typeof n==="object"||typeof n==="function")){return n}return i(e)}var r=FormValidation.Plugin,s=function(n){d(o,n);function o(n){var t;e(this,o);t=a(this,l(o).call(this,n));t.statuses=new Map;t.opts=Object.assign({},{onStatusChanged:function(){}},n);t.elementValidatingHandler=t.onElementValidating.bind(i(t));t.elementValidatedHandler=t.onElementValidated.bind(i(t));t.elementNotValidatedHandler=t.onElementNotValidated.bind(i(t));t.elementIgnoredHandler=t.onElementIgnored.bind(i(t));t.fieldAddedHandler=t.onFieldAdded.bind(i(t));t.fieldRemovedHandler=t.onFieldRemoved.bind(i(t));return t}t(o,[{key:"install",value:function(){this.core.on('core.element.validating',this.elementValidatingHandler).on('core.element.validated',this.elementValidatedHandler).on('core.element.notvalidated',this.elementNotValidatedHandler).on('core.element.ignored',this.elementIgnoredHandler).on('core.field.added',this.fieldAddedHandler).on('core.field.removed',this.fieldRemovedHandler)}},{key:"uninstall",value:function(){this.statuses.clear();this.core.off('core.element.validating',this.elementValidatingHandler).off('core.element.validated',this.elementValidatedHandler).off('core.element.notvalidated',this.elementNotValidatedHandler).off('core.element.ignored',this.elementIgnoredHandler).off('core.field.added',this.fieldAddedHandler).off('core.field.removed',this.fieldRemovedHandler)}},{key:"areFieldsValid",value:function(){return Array.from(this.statuses.values()).every(function(e){return e==='Valid'||e==='NotValidated'||e==='Ignored'})}},{key:"getStatuses",value:function(){return this.statuses}},{key:"onFieldAdded",value:function(e){this.statuses.set(e.field,'NotValidated')}},{key:"onFieldRemoved",value:function(e){this.statuses.has(e.field)&&this.statuses["delete"](e.field);this.opts.onStatusChanged(this.areFieldsValid())}},{key:"onElementValidating",value:function(e){this.statuses.set(e.field,'Validating');this.opts.onStatusChanged(!1)}},{key:"onElementValidated",value:function(e){this.statuses.set(e.field,e.valid?'Valid':'Invalid');e.valid?this.opts.onStatusChanged(this.areFieldsValid()):this.opts.onStatusChanged(!1)}},{key:"onElementNotValidated",value:function(e){this.statuses.set(e.field,'NotValidated');this.opts.onStatusChanged(!1)}},{key:"onElementIgnored",value:function(e){this.statuses.set(e.field,'Ignored');this.opts.onStatusChanged(this.areFieldsValid())}}]);return o}(r),u=function(n){d(o,n);function o(n){var t;e(this,o);t=a(this,l(o).call(this,n));t.fieldStatusPluginName='___autoFocusFieldStatus';t.opts=Object.assign({},{onPrefocus:function(){}},n);t.invalidFormHandler=t.onFormInvalid.bind(i(t));return t}t(o,[{key:"install",value:function(){this.core.on('core.form.invalid',this.invalidFormHandler).registerPlugin(this.fieldStatusPluginName,new s)}},{key:"uninstall",value:function(){this.core.off('core.form.invalid',this.invalidFormHandler).deregisterPlugin(this.fieldStatusPluginName)}},{key:"onFormInvalid",value:function(){var e=this.core.getPlugin(this.fieldStatusPluginName),n=e.getStatuses(),t=Object.keys(this.core.getFields()).filter(function(e){return n.get(e)==='Invalid'});if(t.length>0){var d=t[0],l=this.core.getElements(d);if(l.length>0){var o=l[0],i={firstElement:o,field:d};this.core.emit('plugins.autofocus.prefocus',i);this.opts.onPrefocus(i);o.focus()}}}}]);return o}(r);return u}))